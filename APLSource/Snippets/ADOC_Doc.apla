(
 '# Snippets in Dyalog APL'
 ''
 ''
 '## What are snippets?'
 ''
 'Snippets can be functions, operators, classes, interfaces, namespace scripts or just pieces of code. '
 ''
 'A snippet can also be a variable, though this makes only sense for simple character vectors, vectors of simple character '
 'vectors and simple character matrices.'
 ''
 'Snippets are ideal for frequently used code that doesn''t warrant a full package. For example: '
 ''
 '```'
 'Assert←{⍺←'''' ⋄ (,1)≡,⍵:r←1 ⋄ ⎕ML←1 ⋄ ⍺ ⎕SIGNAL 1↓(⊃∊⍵),11}'
 '```'
 ''
 'This code doesn’t require versioning, documentation, or dependencies, making it unsuitable for a package. However, '
 'because it’s complex to input manually and prone to typos, it’s a perfect candidate for a snippet.'
 ''
 'Another example is a character vector variable:'
 ''
 '```'
 'MIT License                                                                                                                                                             '
 '                                                                                                                                                                         '
 ' Copyright (c) Kai Jaeger                                                                                                                                                '
 '                                                                                                                                                                         '
 ' Permission is hereby granted, free of charge, to any person obtaining a copy                                                                                            '
 ' of this software and associated documentation files (the "Software"), to deal                                                                                           '
 ' ...           '
 '```'
 ''
 'If you add something like this frequently to your new projects, it might be a good idea to save it as a snippet.'
 ''
 '## How to create a snippet'
 ''
 'Snippets can be created in two ways:'
 ''
 '### From a workspace object '
 ''
 'Snippets are saved with file extensions based on the object type:'
 ''
 '* `.aplf` for functions'
 '* `.aplo` for operators'
 '* `.aplc` for classes'
 '* `.apli` for interfaces'
 '* `.apln` for namespace scripts'
 '* `.apla` for variables'
 ''
 'The snippet name defaults to the object’s name, but you can specify a custom name using the `-name=` option.'
 '   '
 '### From the clipboard'
 ''
 'This is the recommended method for creating snippets from code fragments or character variables. '
 'Files for clipboard-based snippets use the `.code` extension.'
 ''
 '1. Copy the code or variable to the clipboard'
 '2. Execute the `]Snippets.Save` command without an argument'
 '3. Optionally, use the `-name=` option to specify a name, or you’ll be prompted to provide one'
 ''
 'Snippets can be organised using group-like names by separating the group from the snippet name. '
 ''
 'For example, to save a different version of an existing Version function under the group "foo":'
 ''
 '```'
 ' ]Snippets.Save #.Version -name=foo-Version'
 '```        '
 ''
 '## How to get a snippet into the workspace                 '
 ''
 'You can load snippets into the workspace in several ways:'
 ''
 '* Fixing APL Objects (not applicable for code snippets)'
 '* Using the clipboard to copy and paste code, objects, or simple variables. '
 '                                               '
 ''
 '### Fixing Snippets'
 ''
 'Use ]Snippets.Fix to load objects into the workspace:'
 ''
 '* Without Arguments: Lists all snippets for selection'
 '* With a Trailing Asterisk (wildcard): Lists matching snippets for selection, useful for grouped names'
 '* With a Single Name: Loads the specified snippet'
 '* With a Vector of Names: Loads multiple snippets; do not include spaces between names'
 ''
 'Notes:'
 ''
 '* Searches are **not** case-sensitive.'
 '* Without a wildcard you must either specify the full name without or with the extension, but nothing in between.'
 ''
 'If the command is issued outside `#`, you’ll be asked whether to load the snippet into `#` or the current namespace.'
 ''
 '### Using the Clipboard'
 ''
 'Copying snippets via `]Snippets.Copy` is supported on Windows. On other platforms, use `]Snippets.Show` to display '
 'the snippet and copy it manually.'
 ''
 '## Storage Location'
 ''
 'Snippets are stored in the `.snippets/` folder within your home directory.'
 ''
)
